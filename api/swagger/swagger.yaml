swagger: "2.0"
info:
  version: "0.0.1"
  title: JMP technik API
  description: RESTful API specification
  contact:
    name: Peter Kacinec
    email: peter.kacinec@icloud.com
# during dev, should point to your local machine
host: localhost:10010
basePath: /api 
schemes:
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
securityDefinitions:
  sportnet_user:
    type: oauth2
    authorizationUrl: "https://api.sportnet.online/v1/auth/authorize"
    flow: implicit
    scopes: {}
paths:
  /hello:
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      operationId: helloAction
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/HelloWorldResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /reklamacia:
    x-swagger-router-controller: reklamacia
    get:
      description: get a reklamacia list
      operationId: getReklamacie
      security:
        - sportnet_user: []
      parameters:
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/offset"
        - name: q
          in: query
          type: string
          description: Fulltext search query
          required: false
        - name: ids
          in: query
          type: array
          items:
            type: string
          description: Get by ids
          required: false
          collectionFormat: csv
        - name: sorter
          in: query
          type: string
          enum:
            - name
            - -name
          default: -name
          description: Define sort order
          required: false 
      responses:
        200:
          description: Success
          schema:
            type: object
            items:
              type: array
              items:
                $ref: "#/definitions/Reklamacia"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    post:
      description: add a new reklamacia
      operationId: createReklamacia
      parameters: 
         - name: data
           in: body
           required: true
           description: New cafe details to add
           schema:
               $ref: "#/definitions/ReklamaciaCreate"
      responses:
        200:
          description: Successfully saved new cafe
          schema:
            $ref: "#/definitions/Reklamacia"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /reklamacia/{reklamaciaId}:
    x-swagger-router-controller: reklamacia
    parameters:
      - $ref: "#/parameters/pathReklamaciaId"
    get:
      # tags: [Admin:organizations]
      operationId: getReklamacia
      responses:
        200:
          description: Organization's profile
          schema:
            $ref: "#/definitions/Reklamacia"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    put:
      # tags: [Admin:organizations]
      operationId: updateReklamacia
      parameters:
        - name: data
          in: body
          schema:
            $ref: "#/definitions/Reklamacia"
          required: true
          description: data to update
      responses:
        200:
          description: Update organization's profile, and return it
          schema:
            $ref: "#/definitions/Reklamacia"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string

  Cafe:
    properties:
      name:
        type: string
        description: Cafe name
      description: 
        type: string
        description: Brief description of the cafe
    additionalProperties: true

  CafeCreate:
    required:
        - name
        - description
    properties:
      name:
        type: string
        description: Cafe name
      description: 
        type: string
        description: Brief description of the cafe
    additionalProperties: false

  CafeUpdate:
    type: object
    properties:
      name: {type: string, minLength: 1}
      description: {type: string, minLength: 1}
    additionalProperties: false

  Reklamacia:
    properties:
      reklamacne_cislo_JMP:
        type: number
        description: Reklamacne cislo JMP
      rok_zaradenia:
        type: number
        description: Rok vytvorenia reklamacie
      reklamacne_cislo_OBI:
        type: string
        description: Reklamacne cislo OBI
      zakaznik:
        type: string
        description: Meno a priezvisko osoby
      ulica:
        type: string
        description: Ulica
      mesto:
        type: string
        description: Mesto
      psc:
        type: string
        description: Postove smerove cislo
      tel:
        type: string
        description: Telefonny kontakt
      datum_uplatnenia_reklamacie:
        type: string
        format: date-time
        description: Datum uplatnenia reklamacie
      datum_odoslania_reklamacie:
        type: string
        format: date-time
        description: Datum odoslania reklamacie
      datum_predaja:
        type: string
        format: date-time
        description: Datum predaja
      znacka_stroja:
        type: string
        description: Znacka stroja
      typ_stroja:
        type: string
        description: Typ stroja
      modelove_cislo:
        type: string
        description: Modelove cislo stroja
      vyrobne_cislo:
        type: string
        description: Vyrobne cislo stroja
      kompletnost_stroja:
        type: boolean
        description: Kompletnost stroja
      reklamovana_vada:
        type: string
        description: Popis reklamovanej vady
      zistena_vada:
        type: string
        description: Skutocne zistena vada v servise
      reklamacia:
        type: boolean
        description: Vyhodnotenie reklamacie uznana/neuznana
      oprava:
        type: string
        description: Vykonana oprava na zariadeni
    additionalProperties: true

  ReklamaciaCreate:
    type: object
    required:
        - reklamacne_cislo_JMP
        - reklamacne_cislo_OBI
        - zakaznik
        - datum_predaja
        - datum_uplatnenia_reklamacie
        - datum_odoslania_reklamacie
        - znacka_stroja
        - typ_stroja
        - modelove_cislo
        - reklamovana_vada
        - zistena_vada
    properties:
      reklamacne_cislo_JMP:
        type: number
      rok_zaradenia:
        type: number
      reklamacne_cislo_OBI:
        type: string
      zakaznik:
        type: string
      ulica:
        type: string
      mesto:
        type: string
      psc:
        type: string
      tel:
        type: string
      datum_uplatnenia_reklamacie:
        type: string
        format: date-time
      datum_odoslania_reklamacie:
        type: string
        format: date-time
      datum_predaja:
        type: string
        format: date-time
      znacka_stroja:
        type: string
      typ_stroja:
        type: string
      modelove_cislo:
        type: string
      vyrobne_cislo:
        type: string
      kompletnost_stroja:
        type: boolean
      reklamovana_vada:
        type: string
      zistena_vada:
        type: string
      reklamacia:
        type: boolean
      oprava:
        type: string
    additionalProperties: false

  Error:
    properties:
      statusCode:
        type: integer
      name:
        type: string
      description:
        type: [string, 'null']
      payload:
        type: [object, 'null']
        additionalProperties: true
      userinfo:
        type: string
        description: Localized info
    additionalProperties: true

  UserPublicProfile:
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      surname:
        type: string
      email:
        $ref: "#/definitions/elementary.email"
      phone:
        type: string
      sex:
        $ref: "#/definitions/elementary.sex"
      created_datetime:
        type: string
        format: date-time
      username:
        type: string

  elementary.sex:
    type: [string, "null"]
    enum: ['M', 'F', null]
  elementary.email:
    type: string
    format: email

parameters:
  limit:
    name: limit
    in: query
    type: integer
    required: false
    default: 100
    description: Limit for paginated results
  offset:
    name: offset
    in: query
    type: integer
    required: false
    default: 0
    description: Offset for paginated results
  pathCafeId:
    name: cafeId
    in: path
    type: string
    required: true
    description: Cafe Id
  pathReklamaciaId:
    name: reklamaciaId
    in: path
    type: string
    required: true
    description: Reklamacia Id